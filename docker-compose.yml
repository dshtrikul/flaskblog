version: '3.7'

services:

  mysql:
    image: mysql_db
    container_name: mysql_db
    build:
      context: .
      dockerfile: .Dockerfile-mysql_db
    restart: always
    environment:
      MYSQL_DATABASE: blog_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: 0.0.0.0
      MYSQL_ROOT_HOST: "%"
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/db_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d:ro
    networks:
     - blog_network

  flask:
    image: flask_blog
    container_name: flask_blog
    build:
      context: .
      dockerfile: .Dockerfile-flask_blog
    restart: always
    # ports:
    #  - "5000:5000"
    # volumes:
    #  - ./:/app
    depends_on:
      - mysql
    command: gunicorn -w 1 -b :5000 --access-logfile - --error-logfile - run:app
    networks:
      blog_network:
        aliases:
          - flaskblog

  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: .Dockerfile-nginx
    ports:
      - "80:80"
    depends_on:
      - flask
    volumes:
     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
     - blog_network

networks:
  blog_network:
    driver: bridge
